@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.normal-button {
  @apply rounded-md text-xl font-semibold tracking-wide;
}

/* .normal-button {
  color: hsl(var(--primary-foreground));
  background-color: hsl(var(--primary));
}
.normal-button:hover {
  background-color: hsl(var(--primary) / 0.9);
} */
.alert-container {
  background-color: hsl(var(--primary));
}
.gradient-text {
  background: linear-gradient(to right, red, blue);
  -webkit-background-clip: text;
  color: transparent;
}
.gradient-square {
  inset: 0;
  background-image: linear-gradient(to bottom right, #ff69b4, #ff9f43);
  animation: rotating 4s linear infinite;

  opacity: 0.75;
}

/* .current-box {
  border-radius: 0.125rem;
  position: relative;
}
.current-box::before {
  content: '';
  inset: 0;
  position: absolute;
  background: repeating-conic-gradient(
    from var(--a),
    #0f0,
    #ff0,
    #0ff,
    #f0f,
    #0ff
  );
  animation: rotating 4s linear infinite;
}
.current-box::after {
  content: '';
  inset: 0;
  position: absolute;
  background-image: repeating-conic-gradient(
    from var(--a),
    #0f0,
    #ff0,
    #0ff,
    #f0f,
    #0ff
  );
  animation: rotating 4s linear infinite;
  filter: blur(40px);
  opacity: 0.75;
}
.current-box span {
  position: absolute;
  inset: 4;
  border-radius: 0.125rem;
  z-index: 1;
}
@property --a {
  syntax: '<angle>';
  inherits: false;
  initial-value: 0deg;
}
@keyframes rotating {
  0% {
    --a: 0deg;
  }
  100% {
    --a: 360deg;
  }
} */
